# docker-compose.yml  (nothing else goes in this file)
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    networks:
      - stock-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "bash", "-c", "echo ruok | nc -w 2 localhost 2181 | grep imok"]
      interval: 10s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka 
    depends_on: [zookeeper]
    hostname: kafka
    networks:
      - stock-network
    ports: ["9092:9092"]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    networks:
      - stock-network
    ports: ["9200:9200"]
    environment:
      discovery.type: single-node
      xpack.security.enabled: "false"
    volumes:
      - es_data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    networks:
      - stock-network
    depends_on: [elasticsearch]
    ports: ["5601:5601"]
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200

  spark-master:
    build:
      context: .
      dockerfile: spark-py.Dockerfile
    image: spark-py:3.5.5
    networks:
      - stock-network
    environment:
      - SPARK_MODE=master
      - PYSPARK_PYTHON=/opt/bitnami/python/bin/python3
      - PYSPARK_DRIVER_PYTHON=/opt/bitnami/python/bin/python3
    volumes:
      - .:/opt/app
    working_dir: /opt/app
    ports:
      - "7077:7077"
      - "8080:8080"

  spark-worker:
    build:
      context: .
      dockerfile: spark-py.Dockerfile
    image: spark-py:3.5.5
    networks:
      - stock-network
    depends_on: [spark-master]
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - PYSPARK_PYTHON=/opt/bitnami/python/bin/python3
      - PYSPARK_DRIVER_PYTHON=/opt/bitnami/python/bin/python3
    volumes:
      - .:/opt/app
    working_dir: /opt/app

networks:
  stock-network:
    driver: bridge

volumes:
  es_data: {}
